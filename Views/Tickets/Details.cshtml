@model BugTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces
@using BugTracker.Models.ViewModels.Enums

@inject UserManager<BTUser> userManager
@inject IBTProjectService projectSerivce
@inject IBTFileService BTFileService
@{
    BTUser currentUser = await userManager.GetUserAsync(User);
    BTUser currentPM = await projectSerivce.GetProjectManagerAsync(Model.ProjectId);
}

<h1>Details</h1>

<div class="container" style="margin-left: 150px;margin-right: 30px; padding: 30px; overflow:auto">
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="container">
                <div class="card">
                    <!--Project Details Overview-->
                    <div class="card-body shadow-lg">
                        <h3>Ticket: @Html.DisplayFor(model => model.Title) </h3>
                        <p>Project: @Html.DisplayFor(model => model.Project.Name)</p>
                        <p>
                            Project Manager: @if (currentPM != null)
                            {
                                @currentPM.FullName
                            }
                            else
                            {
                                <i>No Project Manager </i>
                            }

                        </p>
                        <p>
                            Developer: @if (Model.DeveloperUser != null)
                            {
                                @Html.DisplayFor(model => model.DeveloperUser.FullName)
                            }
                            else
                            {
                                <i>No Developer assiged</i>
                                @if (User.IsInRole(Roles.Admin.ToString()) || (currentPM?.Id == currentUser.Id))
                                {
                                    <a class="btn btn-primary" asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">Add Dev</a>
                                }
                            }
                        </p>
                        <div>
                            @if (User.IsInRole(Roles.Admin.ToString()) || (currentPM?.Id == currentUser.Id) ||
                                  (currentUser.Id == Model.DeveloperUser?.Id) ||
                                  (currentUser.Id == Model.OwnerUserId))

                                {
                                    <a asp-action="Edit" asp-route-id="@Model.Id">Edit |</a>
                                }

                            <a asp-controller="Home" asp-action="Dashboard">Back to Dashbord</a>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <!-- More Project Details-->
            <div class="container">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket Details:</h3>
                        <p>Created: @Html.DisplayFor(model => model.Created)</p>
                        <p>Project Deadline: @Html.DisplayFor(model => model.Project.EndDate)</p>
                        <p>Type: @Html.DisplayFor(model => model.TicketType.Name) </p>
                        <p>Priority:  @Html.DisplayNameFor(model => model.TicketPriority.Name)</p>
                        <p>Status: @Html.DisplayFor(model => model.TicketStatus.Name) </p>
                    </div>
                </div>
            </div>
            <br />
            <div class="container">
                <div class="card">
                    <div class="row">
                        <div class="col">
                            <!--Ticket Attactment-->
                            <div class="card-body shadow-lg">
                                <h3>Create Ticket Attacment:</h3>
                                @if (User.IsInRole(Roles.Admin.ToString()) ||
(currentPM?.Id == currentUser.Id) ||
(currentUser.Id == Model.DeveloperUser?.Id) ||
(currentUser.Id == Model.OwnerUserId))
                                {
                                    <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                        <input type="hidden" asp-for="@Model.Id" name="TicketId">


                                        <div class="media-body ml-3">
                                            <label class="form-label d-block mb-2">Add Attachment</label>
                                            <label>
                                                Description
                                                <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                            </label><br />
                                            <label class="btn btn-outline-primary btn-sm">
                                                <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" />
                                            </label>
                                            <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                                        </div>
                                    </form>
                                }
                            </div>
                        </div>

                        <div class="row clearfix m-1">
                            @foreach (TicketAttachment item in Model.Attachments)
                            {
                                <div class="col-sm-2">
                                    <div class="card">
                                        <div class="file">
                                            <a href="javascript:void(0);">
                                                <div class="hover">
                                                    <button type="button" class="btn btn-icon btn-danger">
                                                        <i class="lni lni-trash"></i>
                                                    </button>
                                                </div>
                                                <div class="icon">
                                                    <img src="@BTFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                                </div>
                                                <div class="file-name">
                                                    <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                                    <small>Size: @BTFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("MMM dd, yyyy")</span></small>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="container">
                <div class="card shadow-lg">
                    <!-- Ticket Comments -->


                    <div class="card-body">
                        <h3>Ticket Comments</h3>
                        <div>
                            <form asp-action="Create" asp-controller="TicketComments" method="post">
                                <input type="hidden" name="TicketId" value="@Model.Id" />
                                <textarea name="Comment" rows="3" class="form-control"></textarea>

                                @if (User.IsInRole(Roles.Admin.ToString()) ||
                                 (currentPM?.Id == currentUser.Id) ||
                                 (currentUser.Id == Model.DeveloperUser?.Id) ||
                                 (currentUser.Id == Model.OwnerUserId))
                                {
                                    <button type="submit" class="btn btn-primary btn-block btn-sm">Submit</button>

                                }



                            </form>
                        </div>
                        <div style="overflow-y: auto; height: 150px;">
                            @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                            {
                                <input type="hidden" value="@comment.Id" name="Id" />
                                <input type="hidden" asp-for="@comment.TicketId" />


                                <form asp-action="Edit" asp-controller="TicketComments" method="post">
                                    <div class="media m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0">@comment.User.FullName <i>Posted on @comment.Created.ToString("MMM dd, yyyy")</i></h5>

                                            <p> @Html.Raw(comment.Comment)</p>
                                        </div>
                                    </div>
                                    @if (User.IsInRole(Roles.Admin.ToString()) ||
                       (currentPM?.Id == currentUser.Id) ||
                       (currentUser.Id == Model.DeveloperUser?.Id) ||
                       (currentUser.Id == Model.OwnerUserId))
                                    {
                                        <div class="form-group">

                                            <input type="submit" value="Save" class="btn btn-primary" disabled />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">

                                            <input type="submit" value="Save" class="btn btn-primary" disabled />
                                        </div>
                                    }
                                </form>
                            }
                        </div>

                    </div>




                </div>
            </div>
            <!--History-->
            <div class="container m-1">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket History:</h3>
                        <div style="overflow-y: auto; height: 180px;">
                            @if (Model.History.Count() >= 1)
                            {
                                @foreach (var history in Model.History.OrderByDescending(t => t.Created))
                                {
                                    <div class="col py-2">
                                        <div class="card radius-15">
                                            <div class="card-body">
                                                <div class="float-end text-muted">@history.Created.ToString("d")</div>
                                                <h4 class="card-title text-muted">@history.Property</h4>
                                                <h5 class="card-text">By: @history.User.FullName</h5>
                                                <p class="card-text">@history.Description</p>
                                                @if (history.Description == "New Ticket Created")
                                                {

                                                }
                                                else
                                                {
                                                    <p class="card-text">Previous: @history.OldValue</p>
                                                    <p class="card-text">Current: @history.NewValue</p>
                                                }

                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>This Ticket as no history.</p>
                            }
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">

        </div>

        <div class="col">


        </div>
    </div>


</div>













