@model BugTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces
@using BugTracker.Models.ViewModels.Enums

@inject UserManager<BTUser> userManager
@inject IBTProjectService projectSerivce
@{
    BTUser currentUser = await userManager.GetUserAsync(User);
    BTUser currentPM = await projectSerivce.GetProjectManagerAsync(Model.ProjectId);
}

<h1>Details</h1>

<div class="container">
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="container">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket: @Html.DisplayFor(model => model.Title) </h3>
                        <p>Project: @Html.DisplayFor(model => model.Project.Name)</p>
                        <p>
                            Project Manager: @if (currentPM != null)
                            {
                                @currentPM.FullName
                            }
                            else
                            {
                                <i>No Project Manager </i>
                            }

                        </p>
                        <p>
                            Developer: @if (Model.DeveloperUser != null)
                            {
                                @Html.DisplayFor(model => model.DeveloperUser.FullName)
                            }
                            else
                            {
                                <i>No Developer assiged</i>
                                @if (User.IsInRole(Roles.Admin.ToString()) || (currentPM?.Id == currentUser.Id))
                                {
                                    <a class="btn btn-primary" asp-action="AssignTicket" asp-controller="Tickets" asp-route-id="@Model.Id">Add Dev</a>
                                }
                            }
                        </p>
                        <div>
                            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                            <a asp-action="Index">Back to List</a>
                        </div>
                    </div>
                </div>
            </div>
            <br />

            <div class="container">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket Details:</h3>
                        <p>Created: @Html.DisplayFor(model => model.Created)</p>
                        <p>Project Deadline: @Html.DisplayFor(model => model.Project.EndDate)</p>
                        <p>Type: @Html.DisplayFor(model => model.TicketType.Name) </p>
                        <p>Priority:  @Html.DisplayNameFor(model => model.TicketPriority.Name)</p>
                        <p>Status: @Html.DisplayFor(model => model.TicketStatus.Name) </p>
                    </div>
                </div>
            </div>
            <br />
            <div class="container">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket Attacment:</h3>
                        <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="@Model.Id" name="TicketId">


                            <div class="media-body ml-3">
                                <label class="form-label d-block mb-2">Add Attachment</label>
                                <label>
                                    Description
                                    <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                </label><br />
                                <label class="btn btn-outline-primary btn-sm">
                                    <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" />
                                </label>
                                <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                            </div>
                        </form>




                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="container">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h3>Ticket Comments</h3>
                        <div>
                            <form asp-action="Create" asp-controller="TicketComments" method="post">
                                <input type="hidden" name="TicketId" value="@Model.Id" />
                                <textarea name="Comment" rows="3" class="form-control"></textarea>
                                <button type="submit" class="btn btn-primary btn-block btn-sm">Submit</button>
                            </form>
                        </div>
                        <div style="overflow-y: auto; height: 150px;">
                            @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                            {
                                <input type="hidden" value="@comment.Id" name="Id" />
                                <input type="hidden" asp-for="@comment.TicketId" />


                                <form asp-action="Edit" asp-controller="TicketComments" method="post">
                                    <div class="media m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0">@comment.User.FullName <i>Posted on @comment.Created.ToString("MMM dd, yyyy")</i></h5>

                                            <p> @Html.Raw(comment.Comment)</p>
                                        </div>
                                    </div>
                                    @if (User.IsInRole(Roles.Admin.ToString()) ||
                                     (currentPM?.Id == currentUser.Id) ||
                                     (currentUser.Id == Model.DeveloperUser?.Id) ||
                                     (currentUser.Id == Model.OwnerUserId))
                                    {
                                        <div class="form-group">

                                            <input type="submit" value="Save" class="btn btn-primary" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">

                                            <input type="submit" value="Save" class="btn btn-primary" disabled />
                                        </div>
                                    }
                                </form>
                            }
                        </div>

                    </div>
                </div>
            </div>
            <div class="container m-1">
                <div class="card">
                    <div class="card-body shadow-lg">
                        <h3>Ticket History:</h3>

                        @if (Model.History.Count() >= 1)
                        {
                            @foreach (var history in Model.History)
                            {

                                <p>@history.Created </p>
                                <p>@history.Property</p>
                                <p>By: @history.User.FullName</p>
                                <p>@history.Description </p>
                                <p>Previous: @history.OldValue </p>
                                <p>Curreent: @history.NewValue</p>

                            }
                        }
                        else
                        {
                            <p>This Ticket as no history.</p>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div>

            </div>

        </div>

        <div class="col">


        </div>
    </div>


</div>













