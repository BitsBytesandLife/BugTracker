@model BugTracker.Models.ViewModels.DashboardViewModel
@using BugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using BugTracker.Extentions

@inject IBTCompanyInfoService CompanyInfoService
@inject IBTRolesService RolesService
@inject IBTProjectService ProjectService
@inject IBTTicketService TicketService
@inject UserManager<BTUser> UserManager
<link href="~/plugins/datatable/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<div style="margin-left: 280px;margin-right: 30px; padding: 30px; overflow:auto">





    <div class="card radius-10 overflow-hidden shadow-lg">
        <div class="card-body">
            <p>Total Users: @Model.CurrentCompany.Members.Count()</p>
            <hr />
            <p>Total Tickets: @Model.Tickets.Count()</p>
            <hr />
            <p>Total Developers:@Model.Tickets.GroupBy(t => t.DeveloperUserId).Count()</p>
            <hr />
            <p>Total Submitter:@Model.Tickets.GroupBy(t => t.OwnerUserId).Count()</p>
            <hr />
            <p>Unassinged Tickets:@Model.Tickets.GroupBy(t => t.DeveloperUserId == null).Count()</p>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <section class="content">
                <div class="container-fluid">
                    <div class="row">

                        <!-- DONUT CHART -->
                        <div class="card card-danger">
                            <div class="card-header">
                                <h3 class="card-title">Company Ticket Distribution</h3>
                            </div>
                            <div class="card-body">
                                <canvas id="donutChart">
                                </canvas>
                            </div>
                        </div>

                    </div>
                </div>
            </section>

            <div class="row">
                <section class="content">
                    <div class="container-fluid">
                        <div class="row">
                            <div>
                                <!-- DONUT CHART -->
                                <div class="card card-danger">
                                    <div class="card-header">
                                        <h3 class="card-title">Members by Projects</h3>
                                    </div>
                                    <div class="card-body">
                                        <canvas id="userChart">
                                        </canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
    <!--<div class="row row-cols-1 row-cols-lg-2 row-cols-xl-3">
        <div class="col">
            Assign Users

        </div>
        <div class="col">
            Assign Tickets-->
    @*<form asp-action="AssignTicket" method="post">
            <input asp-for="@Model.Tickets.Where(t => t.Id == )" hidden />

            <input asp-for="@Model.Ticket.ProjectId" hidden />
            <div class="row clearfix">
                <div class="col-md-6 col-sm-12">
                    <label>Select Dev</label>
                    <div class="form-group">
                        <select class="form-control show-tick" asp-for="DeveloperId" asp-items="Model.Developers">
                            <option>Select Dev</option>
                        </select>
                    </div>
                    <div class="mt-4 form-group">
                        <button type="submit" class="btn btn-primary">Submit</button>
                        <button asp-action="Dashboard" asp-controller="Home" class="btn btn-primary">Cancel</button>
                    </div>
                </div>
            </div>
        </form>*@
    <!--</div>
    </div>-->
    @*<div class="col">

            <div class="col-lg-12">
                <div class="card radius-10">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <p class="mb-0 text-secondary">Store Visitors</p>
                                <h4 class="my-1">Unassigned Tickets</h4>
                                <p class="mb-0 font-13 text-danger">
                                    <i class='bx bxs-down-arrow align-middle'></i>12.4% Since last week
                                </p>
                            </div>
                            <div class="widgets-icons bg-light-danger text-danger ms-auto">
                                <i class='bx bxs-binoculars'></i>
                            </div>
                        </div>
                        <div id="chart3"></div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card radius-10">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <h4 class="my-1">Analytics</h4>
                                <p class="mb-0 font-13 text-success">
                                    <span>@Model.Tickets.Count() </span>
                                </p>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>*@
    <!--myTickets-->
    <div class="row ">
        <h6 class="mb-0 text-uppercase">MY Project Tickets</h6>
        <hr />
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="allTickets" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>
                                        Title
                                    </th>
                                    @*<th>
                                            Created
                                        </th>
                                        <th>
                                            Updated
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Archived)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ArchivedDate)
                                        </th>*@
                                    @*<th>
                                            Description
                                        </th>*@
                                    @*<th>
                                            Project
                                        </th>*@
                                    <th>
                                        Priority
                                    </th>
                                    <th>
                                        Type
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.OwnerUser)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.DeveloperUser)
                                        </th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Tickets)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Created)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Updated)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Description)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Project.Name)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TicketType.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                                        </td>

                                        <td>
                                            <a asp-controller="Projects" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                            <a asp-controller="Projects" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                            <a asp-controller="Projects" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>

                </div>
            </div>
        </div>
    </div>


    <!--myProjects-->
    <div class="row ">
        <h6 class="mb-0 text-uppercase">My Projects</h6>
        <hr />
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="allProjects" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Start Date
                                </th>
                                <th>
                                    End Date
                                </th>
                                <th>
                                    Project
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Projects)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StartDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EndDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                                    </td>
                                    <td>
                                        <a asp-controller="Projects" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                        <a asp-controller="Projects" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                        <a asp-controller="Projects" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Bootstrap JS -->
<script src="~/js/bootstrap.bundle.min.js"></script>
<!--plugins-->
<script src="~/js/jquery.min.js"></script>
<script src="~/plugins/simplebar/js/simplebar.min.js"></script>
<script src="~/plugins/metismenu/js/metisMenu.min.js"></script>
<script src="~/plugins/perfect-scrollbar/js/perfect-scrollbar.js"></script>
<script src="~/plugins/datatable/js/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatable/js/dataTables.bootstrap5.min.js"></script>
<script src="~/js/table-datatable.js"></script>
<!--app JS-->
<script src="~/js/app.js"></script>

<script src="~/plugins/datatable/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.3.2/chart.min.js" integrity="sha512-VCHVc5miKoln972iJPvkQrUYYq7XpxXzvqNfiul1H4aZDwGBGC0lq373KNleaB2LpnC2a/iNfE5zoRYmB4TRDQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
@section Scripts{
    <script>
        //$(function () {
        //    $("#allTickets").DataTable({
        //        "responsive": true, "lengthChange": false, "autoWidth": false,
        //    });
        //});
        $("#allTickets").DataTable();

        $("#allProjects").DataTable();
        //$(function () {
        //    $("#allProjects").DataTable({
        //        "responsive": true, "lengthChange": false, "autoWidth": false,
        //    });
        //});
    </script>


    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/PieChartMethod",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Pie
                    var options = {
                        title: 'Company Ticket Distribution',
                        //is3D: true
                    };
                    var chart = new google.visualization.PieChart($("#chart1")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/PieChartMethod",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //3D Pie
                    var options = {
                        title: 'Company Ticket Distribution',
                        is3D: true
                    };
                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/PieChartMethod",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.5
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>


    <script type="text/javascript">
        $.ajax({
            type: "POST",
            url: "/Home/DonutMethod",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                //Donut
                var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
                var donutData = result

                var donutOptions = {
                    maintainAspectRatio: false,
                    responsive: true,
                }
                //Create pie or douhnut chart
                // You can switch between pie and douhnut using the method below.
                new Chart(donutChartCanvas, {
                    type: 'doughnut',
                    data: donutData,
                    options: donutOptions
                })
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });

    </script>


    <script type="text/javascript">
        $.ajax({
            type: "POST",
            url: "/Home/UserChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                //Donut
                var donutChartCanvas = $('#userChart').get(0).getContext('2d')
                var donutData = result

                var donutOptions = {
                    maintainAspectRatio: false,
                    responsive: true,
                }
                //Create pie or douhnut chart
                // You can switch between pie and douhnut using the method below.
                new Chart(donutChartCanvas, {
                    type: 'doughnut',
                    data: donutData,
                    options: donutOptions
                })
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });

    </script>



}


